{"version":3,"sources":["App.jsx","serviceWorker.js","index.jsx"],"names":["Container","_styled2","target","name","styles","Text","motion","h1","SubText","Title","Image","img","Link","IconList","links","title","Icon","___EmotionJSX","xmlns","width","height","viewBox","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","d","link","config","facebook","twitter","github","x","y","rx","x1","y1","x2","y2","linkedin","cx","cy","r","concat","email","App","src","initial","opacity","scale","rotate","animate","work","href","rel","company","map","_ref","key","Boolean","window","location","hostname","match","ReactDOM","render","React","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0b8a5afb.chunk.js","sourcesContent":["import { motion } from 'framer-motion'\nimport * as React from 'react'\nimport tw from 'twin.macro'\nimport config from './config.json'\n\nconst Container = tw.div`\n  w-screen h-screen\n  flex flex-col\n  bg-gray-800 overflow-hidden\n  items-center justify-center\n`\n\nconst Text = tw(motion.h1)`\n  text-3xl font-extrabold\n  tracking-widest uppercase\n  text-gray-100\n`\n\nconst SubText = tw(Text)`text-xl font-medium tracking-wide`\n\nconst Title = tw(SubText)`text-sm`\n\nconst Image = tw(motion.img)`object-center rounded-full shadow-xl border-4`\n\nconst Link = tw.a`transform hover:scale-110`\n\nconst IconList = tw.div`flex justify-center items-center text-gray-100`\n\nconst Facebook = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"44\"\n    height=\"44\"\n    viewBox=\"0 0 24 24\"\n    strokeWidth=\"1\"\n    stroke=\"#f7fafc\"\n    fill=\"none\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M7 10v4h3v7h4v-7h3l1 -4h-4v-2a1 1 0 0 1 1 -1h3v-4h-3a5 5 0 0 0 -5 5v2h-3\" />\n  </svg>\n)\n\nconst Twitter = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"44\"\n    height=\"44\"\n    viewBox=\"0 0 24 24\"\n    strokeWidth=\"1\"\n    stroke=\"#f7fafc\"\n    fill=\"none\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M22 4.01c-1 .49 -1.98 .689 -3 .99c-1.121 -1.265 -2.783 -1.335 -4.38 -.737s-2.643 2.06 -2.62 3.737v1c-3.245 .083 -6.135 -1.395 -8 -4c0 0 -4.182 7.433 4 11c-1.872 1.247 -3.739 2.088 -6 2c3.308 1.803 6.913 2.423 10.034 1.517c3.58 -1.04 6.522 -3.723 7.651 -7.742a13.84 13.84 0 0 0 .497 -3.753c-.002 -.249 1.51 -2.772 1.818 -4.013z\" />\n  </svg>\n)\n\nconst Github = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"44\"\n    height=\"44\"\n    viewBox=\"0 0 24 24\"\n    strokeWidth=\"1\"\n    stroke=\"#f7fafc\"\n    fill=\"none\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M9 19c-4.3 1.4 -4.3 -2.5 -6 -3m12 5v-3.5c0 -1 .1 -1.4 -.5 -2c2.8 -.3 5.5 -1.4 5.5 -6a4.6 4.6 0 0 0 -1.3 -3.2a4.2 4.2 0 0 0 -.1 -3.2s-1.1 -.3 -3.5 1.3a12.3 12.3 0 0 0 -6.2 0c-2.4 -1.6 -3.5 -1.3 -3.5 -1.3a4.2 4.2 0 0 0 -.1 3.2a4.6 4.6 0 0 0 -1.3 3.2c0 4.6 2.7 5.7 5.5 6c-.6 .6 -.6 1.2 -.5 2v3.5\" />\n  </svg>\n)\n\nconst LinkedIn = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"44\"\n    height=\"44\"\n    viewBox=\"0 0 24 24\"\n    strokeWidth=\"1\"\n    stroke=\"#f7fafc\"\n    fill=\"none\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" rx=\"2\" />\n    <line x1=\"8\" y1=\"11\" x2=\"8\" y2=\"16\" />\n    <line x1=\"8\" y1=\"8\" x2=\"8\" y2=\"8.01\" />\n    <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"11\" />\n    <path d=\"M16 16v-3a2 2 0 0 0 -4 0\" />\n  </svg>\n)\n\nconst Email = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"44\"\n    height=\"44\"\n    viewBox=\"0 0 24 24\"\n    strokeWidth=\"1\"\n    stroke=\"#f7fafc\"\n    fill=\"none\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <circle cx=\"12\" cy=\"12\" r=\"4\" />\n    <path d=\"M16 12v1.5a2.5 2.5 0 0 0 5 0v-1.5a9 9 0 1 0 -5.5 8.28\" />\n  </svg>\n)\n\nconst links = [\n  {\n    title: 'Facebook',\n    Icon: Facebook,\n    link: config.facebook,\n  },\n  {\n    title: 'Twitter',\n    Icon: Twitter,\n    link: config.twitter,\n  },\n  {\n    title: 'Github',\n    Icon: Github,\n    link: config.github,\n  },\n  {\n    title: 'LinkedIn',\n    Icon: LinkedIn,\n    link: config.linkedin,\n  },\n  {\n    title: 'Email',\n    Icon: Email,\n    link: `mailto:${config.email}`,\n  },\n]\n\nfunction App() {\n  return (\n    <Container>\n      <Image\n        src=\"https://github.com/joseederangojr.png\"\n        width=\"300\"\n        height=\"300\"\n        initial={{ opacity: 0, scale: 0, rotate: 360 }}\n        animate={{ opacity: 1, scale: 1, rotate: 0 }}\n      />\n      <Text initial={{ opacity: 0, y: 250 }} animate={{ opacity: 1, y: 0 }}>\n        Jose Ederango Jr.\n      </Text>\n      <SubText initial={{ opacity: 0, y: 50 }} animate={{ opacity: 1, y: 0 }}>\n        Building quality software\n      </SubText>\n      <Title initial={{ opacity: 0, y: 50 }} animate={{ opacity: 1, y: 0 }}>\n        {config.work.title} &mdash;{' '}\n        <a href={config.work.link} target=\"_blank\" rel=\"noopener noreferrer\">\n          {config.work.company}\n        </a>\n      </Title>\n      <IconList>\n        {links.map(({ Icon, title, link }) => (\n          <Link\n            key={title}\n            title={title}\n            href={link}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Icon />\n          </Link>\n        ))}\n      </IconList>\n    </Container>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport 'tailwindcss/dist/base.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}